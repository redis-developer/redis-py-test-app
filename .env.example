# Redis Connection Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0
REDIS_CLUSTER=false
REDIS_CLUSTER_NODES=
REDIS_SSL=false
REDIS_SSL_CERT_REQS=required
REDIS_SSL_CA_CERTS=
REDIS_SSL_CERTFILE=
REDIS_SSL_KEYFILE=
REDIS_SOCKET_TIMEOUT=5.0
REDIS_SOCKET_CONNECT_TIMEOUT=5.0
REDIS_MAX_CONNECTIONS=50
REDIS_RETRY_ATTEMPTS=3
REDIS_RETRY_DELAY=0.1
REDIS_EXPONENTIAL_BACKOFF=true

# Test Configuration
TEST_CLIENT_INSTANCES=1
TEST_CONNECTIONS_PER_CLIENT=10
TEST_THREADS_PER_CLIENT=4
TEST_DURATION=
TEST_TARGET_OPS_PER_SECOND=
TEST_WORKLOAD_PROFILE=basic_rw
TEST_OPERATIONS=SET,GET
TEST_OPERATION_WEIGHTS=
TEST_KEY_PREFIX=rw_test
TEST_KEY_RANGE=10000
TEST_VALUE_SIZE_MIN=100
TEST_VALUE_SIZE_MAX=1000
TEST_READ_WRITE_RATIO=0.7
TEST_USE_PIPELINE=false
TEST_PIPELINE_SIZE=10
TEST_ASYNC_MODE=false
TEST_PUBSUB_CHANNELS=
TEST_TRANSACTION_SIZE=5

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=

# Metrics Configuration
METRICS_ENABLED=true
METRICS_PORT=8000
METRICS_INTERVAL=5
PROMETHEUS_SCRAPE_INTERVAL=5s
OTEL_EXPORT_INTERVAL=5000
GRAFANA_REFRESH_INTERVAL=5s

# OpenTelemetry Configuration
OTEL_ENABLED=true
OTEL_SERVICE_NAME=redis-py-test-app
OTEL_SERVICE_VERSION=1.0.0
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_EXPORTER_OTLP_HEADERS=
OTEL_EXPORTER_OTLP_TIMEOUT=10
OTEL_EXPORTER_JAEGER_ENDPOINT=
OTEL_RESOURCE_ATTRIBUTES=service.name=redis-py-test-app,service.version=1.0.0

# Multi-App Identification
APP_NAME=python
INSTANCE_ID=

# Output Configuration
OUTPUT_FILE=
QUIET=false
CONFIG_FILE=
